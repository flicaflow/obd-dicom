image: golang:alpine

before_script:
  - mkdir -p $GOPATH/src/git.onebytedata.com/$CI_PROJECT_NAMESPACE
  - cd $GOPATH/src/git.onebytedata.com/$CI_PROJECT_NAMESPACE
  - ln -s $CI_PROJECT_DIR
  - cd $CI_PROJECT_NAME

stages:
  - test
  - build
  - publish
  - deploy

variables:
  GIT_STRATEGY: clone
  GO111MODULE: "on"
  LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest
  TAG_BUILD: $CI_REGISTRY_IMAGE:${CI_PIPELINE_ID}
  TAG_RELEASE: $CI_REGISTRY_IMAGE:${CI_COMMIT_TAG}

test-amd64:
  stage: test
  image: golang:alpine
  script:
    - apk add gcc g++
    - go test ./...

# test-arm64:
#   stage: test
#   image: arm64v8/golang:alpine
#   script:
#     - apk add gcc g++
#     - go test ./...

build-amd64:
  stage: build
  script:
    - apk add gcc g++
    - GOOS=linux GOARCH=amd64 go build -v -a -ldflags "-X main.version=build.${CI_PIPELINE_ID}" -o build/linux/amd64/obd-dicom cmd/odb-dicom/main.go
  cache:
    key: ${CI_PIPELINE_ID}
    paths:
      - build
  artifacts:
    paths:
      - build/linux/amd64/obd-dicom
    expire_in: 30 days

# build-arm64:
#   stage: build
#   image: arm64v8/golang:alpine
#   script:
#     - apk add gcc g++
#     - GOOS=linux GOARCH=arm64 go build -v -a -ldflags "-X main.version=build.${CI_PIPELINE_ID}" -o build/linux/arm64/obd-dicom cmd/odb-dicom/main.go
#   cache:
#     key: ${CI_PIPELINE_ID}
#     paths:
#       - build
#   artifacts:
#     paths:
#       - build/linux/arm64/obd-dicom
#     expire_in: 30 days

# build-windows:
#   stage: build
#   image: winamd64/golang:latest
#   script:
#     - sed -i 's/linux/win64/g' openjpeg/j2kcodec.go
#     - sed -i 's/linux/win64/g' jpeglib/codec8.go
#     - sed -i 's/linux/win64/g' jpeglib/codec12.go
#     - sed -i 's/linux/win64/g' jpeglib/codec16.go
#     - GOOS=windows GOARCH=amd64 go build -v -a -ldflags "-X main.version=build.${CI_PIPELINE_ID}" -o build/windows/amd64/obd-dicom.exe cmd/odb-dicom/main.go
#   cache:
#     key: ${CI_PIPELINE_ID}
#     paths:
#       - build
#   artifacts:
#     paths:
#       - build/windows/amd64/obd-dicom.exe
#     expire_in: 30 days

publish-build:
  image: docker:19-dind
  stage: publish
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
  services:
    - docker:19-dind
  only:
    - main
  cache:
    key: ${CI_PIPELINE_ID}
    paths:
      - build
  script:
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker build -t $LATEST_IMAGE -t $TAG_BUILD .
    - docker push $LATEST_IMAGE
    - docker push $TAG_BUILD

publish-release:
  image: docker:19-dind
  stage: publish
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
  services:
    - docker:19-dind
  only:
    - tags
  cache:
    key: ${CI_PIPELINE_ID}
    paths:
      - build
  script:
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker build -t $LATEST_IMAGE -t $TAG_RELEASE .
    - docker push $LATEST_IMAGE
    - docker push $TAG_RELEASE
