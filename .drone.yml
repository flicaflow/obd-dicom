kind: pipeline
type: docker
name: default

workspace:
  base: /go
  path: src/github.com/one-byte-data/${DRONE_REPO_NAME}

trigger:
  event:
    - push
    - pull_request
    - tag

steps:
  - name: test
    image: golang:alpine
    commands:
      - apk add gcc g++
      - GOOS=linux GOARCH=amd64 go test -p 1 -coverprofile=coverage.txt ./...

  - name: build
    image: golang:alpine
    commands:
      - apk add gcc g++
      - GOOS=linux GOARCH=amd64 go build -v -a -ldflags "-X main.version=build.${DRONE_BUILD_NUMBER}" -o build/linux/amd64/obd-dicom cmd/odb-dicom/main.go
      - GOOS=linux GOARCH=amd64 go build -v -a -ldflags "-X main.version=build.${DRONE_BUILD_NUMBER}" -o build/linux/amd64/compare cmd/compare/main.go

  - name: docker
    image: plugins/docker
    settings:
      username:
        from_secret: github_username
      password:
        from_secret: github_password
      email:
        from_secret: github_email
      registry: ghcr.io
      repo: ghcr.io/one-byte-data/obd-dicom
      tags: latest
